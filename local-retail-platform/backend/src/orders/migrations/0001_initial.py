# Generated by Django 5.2.7 on 2025-10-11 22:07

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("customers", "0001_initial"),
        ("merchants", "0001_initial"),
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_number",
                    models.CharField(
                        help_text="Unique order identifier",
                        max_length=50,
                        unique=True,
                        verbose_name="Order Number",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("processing", "Processing"),
                            ("shipped", "Shipped"),
                            ("delivered", "Delivered"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "fulfillment_method",
                    models.CharField(
                        choices=[
                            ("delivery", "Home Delivery"),
                            ("pickup", "In-Store Pickup"),
                        ],
                        default="delivery",
                        max_length=20,
                        verbose_name="Fulfillment Method",
                    ),
                ),
                (
                    "shipping_street_address",
                    models.CharField(max_length=255, verbose_name="Shipping Street"),
                ),
                (
                    "shipping_city",
                    models.CharField(max_length=100, verbose_name="Shipping City"),
                ),
                (
                    "shipping_postal_code",
                    models.CharField(
                        max_length=10, verbose_name="Shipping Postal Code"
                    ),
                ),
                (
                    "shipping_country",
                    models.CharField(
                        default="DE", max_length=2, verbose_name="Shipping Country"
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        help_text="Sum of all items before tax and shipping",
                        max_digits=10,
                        verbose_name="Subtotal (€)",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Tax Amount (€)",
                    ),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Shipping Cost (€)",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Discount Amount (€)",
                    ),
                ),
                (
                    "tokens_used",
                    models.IntegerField(default=0, verbose_name="Loyalty Tokens Used"),
                ),
                (
                    "tokens_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Token Discount Value (€)",
                    ),
                ),
                (
                    "total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Total Amount (€)",
                    ),
                ),
                (
                    "payment_status",
                    models.CharField(
                        default="pending", max_length=20, verbose_name="Payment Status"
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Payment Method"
                    ),
                ),
                (
                    "customer_notes",
                    models.TextField(
                        blank=True,
                        help_text="Special delivery instructions",
                        verbose_name="Customer Notes",
                    ),
                ),
                (
                    "tracking_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Tracking Number"
                    ),
                ),
                (
                    "tracking_url",
                    models.URLField(blank=True, verbose_name="Tracking URL"),
                ),
                (
                    "ordered_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Ordered At"),
                ),
                (
                    "confirmed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Confirmed At"
                    ),
                ),
                (
                    "shipped_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Shipped At"
                    ),
                ),
                (
                    "delivered_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Delivered At"
                    ),
                ),
                (
                    "cancelled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Cancelled At"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="customers.customerprofile",
                        verbose_name="Customer",
                    ),
                ),
                (
                    "shop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="merchants.shop",
                        verbose_name="Shop",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "ordering": ["-ordered_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product_name",
                    models.CharField(
                        help_text="Snapshot at order time",
                        max_length=255,
                        verbose_name="Product Name",
                    ),
                ),
                (
                    "product_sku",
                    models.CharField(max_length=100, verbose_name="Product SKU"),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price per item at order time",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Unit Price (€)",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Quantity",
                    ),
                ),
                (
                    "line_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="unit_price × quantity",
                        max_digits=10,
                        verbose_name="Line Total (€)",
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("19.00"),
                        max_digits=5,
                        verbose_name="Tax Rate (%)",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Tax Amount (€)",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="orders.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="PROTECT: Keep product history even if deleted",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_items",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Item",
                "verbose_name_plural": "Order Items",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="OrderStatusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=20, verbose_name="Status")),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "changed_by",
                    models.CharField(
                        blank=True,
                        help_text="User who made the change",
                        max_length=100,
                        verbose_name="Changed By",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Changed At"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_history",
                        to="orders.order",
                        verbose_name="Order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Status History",
                "verbose_name_plural": "Order Status Histories",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["order_number"], name="orders_orde_order_n_f3ada5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["customer", "-ordered_at"],
                name="orders_orde_custome_6c4b7b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["shop", "-ordered_at"], name="orders_orde_shop_id_177933_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["status", "-ordered_at"], name="orders_orde_status_820be9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderitem",
            index=models.Index(
                fields=["order", "product"], name="orders_orde_order_i_52f79a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="orderstatushistory",
            index=models.Index(
                fields=["order", "-created_at"], name="orders_orde_order_i_ca028d_idx"
            ),
        ),
    ]
