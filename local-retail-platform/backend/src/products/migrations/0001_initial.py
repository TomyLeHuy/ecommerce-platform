# Generated by Django 5.2.7 on 2025-10-11 21:48

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("merchants", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Category Name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        max_length=100, unique=True, verbose_name="URL Slug"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="CSS icon class name",
                        max_length=50,
                        verbose_name="Icon Class",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display Order"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Leave empty for top-level category",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="products.category",
                        verbose_name="Parent Category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Product Name")),
                ("slug", models.SlugField(max_length=255, verbose_name="URL Slug")),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed product description",
                        verbose_name="Description",
                    ),
                ),
                (
                    "short_description",
                    models.CharField(
                        blank=True,
                        help_text="Brief product summary",
                        max_length=500,
                        verbose_name="Short Description",
                    ),
                ),
                (
                    "sku",
                    models.CharField(
                        help_text="Unique product identifier",
                        max_length=100,
                        unique=True,
                        verbose_name="SKU",
                    ),
                ),
                (
                    "barcode",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Barcode/EAN"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Price (€)",
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Optional discounted price",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Sale Price (€)",
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Your cost for inventory management",
                        max_digits=10,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00"))
                        ],
                        verbose_name="Cost Price (€)",
                    ),
                ),
                (
                    "stock_quantity",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Stock Quantity",
                    ),
                ),
                (
                    "min_stock_level",
                    models.IntegerField(
                        default=5,
                        help_text="Trigger restock notification at this level",
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Minimum Stock Level",
                    ),
                ),
                (
                    "max_stock_level",
                    models.IntegerField(
                        blank=True,
                        help_text="Target stock level for reordering",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Maximum Stock Level",
                    ),
                ),
                (
                    "weight_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        max_digits=8,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.001"))
                        ],
                        verbose_name="Weight (kg)",
                    ),
                ),
                (
                    "length_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Length (cm)",
                    ),
                ),
                (
                    "width_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Width (cm)",
                    ),
                ),
                (
                    "height_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Height (cm)",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Product is visible and available for purchase",
                        verbose_name="Active",
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Show in featured products",
                        verbose_name="Featured",
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, max_length=70, verbose_name="Meta Title"
                    ),
                ),
                (
                    "meta_description",
                    models.CharField(
                        blank=True, max_length=160, verbose_name="Meta Description"
                    ),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(default=0, verbose_name="View Count"),
                ),
                (
                    "sales_count",
                    models.PositiveIntegerField(default=0, verbose_name="Total Sales"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="products",
                        to="products.category",
                        verbose_name="Category",
                    ),
                ),
                (
                    "shop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="merchants.shop",
                        verbose_name="Shop",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product",
                "verbose_name_plural": "Products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="products/%Y/%m/", verbose_name="Image"
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True,
                        help_text="Image description for accessibility",
                        max_length=255,
                        verbose_name="Alt Text",
                    ),
                ),
                (
                    "display_order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Display Order"
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(
                        default=False,
                        help_text="Main product image",
                        verbose_name="Primary Image",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Image",
                "verbose_name_plural": "Product Images",
                "ordering": ["display_order", "created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(fields=["slug"], name="products_ca_slug_da4386_idx"),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["parent", "is_active"], name="products_ca_parent__1cafc9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["slug"], name="products_pr_slug_3edc0c_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["shop", "is_active"], name="products_pr_shop_id_44685a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "is_active"], name="products_pr_categor_50f5f1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="products_pr_sku_ca0cdc_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together={("shop", "slug")},
        ),
        migrations.AddIndex(
            model_name="productimage",
            index=models.Index(
                fields=["product", "is_primary"], name="products_pr_product_1b7905_idx"
            ),
        ),
    ]
